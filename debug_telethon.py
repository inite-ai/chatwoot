#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π debug Telethon –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –Ω–∞—à–µ–π Ruby —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π
"""

import asyncio
import sys
import logging
import binascii
from telethon import TelegramClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# –í–∫–ª—é—á–∞–µ–º debug –¥–ª—è –≤—Å–µ—Ö MTProto –æ–ø–µ—Ä–∞—Ü–∏–π
logging.getLogger('telethon.network').setLevel(logging.DEBUG)
logging.getLogger('telethon.network.mtproto').setLevel(logging.DEBUG)
logging.getLogger('telethon.network.mtprotosender').setLevel(logging.DEBUG)
logging.getLogger('telethon.network.authenticator').setLevel(logging.DEBUG)

# Your credentials
api_id = 25442680
api_hash = 'e4365172396985cce0091f5de6e82305'
phone = '+79939108755'

async def main():
    print("üöÄ Starting Telethon DEBUG test...")

    # Create client —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    client = TelegramClient('debug_session', api_id, api_hash)

    try:
        print("üìû Connecting to Telegram...")
        await client.connect()

        # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ auth_key
        if not client.is_connected():
            print("‚ùå Not connected")
            return

        print(f"üì± Sending code to {phone}...")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        result = await client.send_code_request(phone)

        print(f"‚úÖ Code sent successfully!")
        print(f"üìÑ Result type: {type(result)}")
        print(f"üìÑ Phone code hash: {result.phone_code_hash}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏
        if hasattr(client._sender, '_state'):
            state = client._sender._state
            print(f"üîë Auth key length: {len(state.auth_key.key) if state.auth_key else 0} bytes")
            print(f"‚è∞ Time offset: {state.time_offset}")
            print(f"üî¢ Session ID: {state.id}")
            if state.auth_key:
                auth_key_id = int.from_bytes(state.auth_key.key[-8:], 'little', signed=True)
                print(f"üÜî Auth key ID: {auth_key_id}")

    except Exception as e:
        print(f"‚ùå Telethon debug test failed: {e}", file=sys.stderr)
        import traceback
        traceback.print_exc()
    finally:
        print("üîå Disconnecting...")
        await client.disconnect()

if __name__ == '__main__':
    asyncio.run(main())
